@inject IJSRuntime JS

@code {
    private int _currentStep = 0;

    private List<ModalStep> steps = new();

    [Parameter] public string? Id { get; set; }

    [Parameter] public bool DarkMode { get; set; } // Enable Dark Mode

    [Parameter] public RenderFragment? ChildContent { get; set; }

    [Parameter] public EventCallback OnFinish { get; set; }

    public int CurrentStep
    {
        get => _currentStep;
        private set
        {
            if (value >= 0 && value < steps.Count)
            {
                _currentStep = value;
                Title = steps[_currentStep].Title;
            }
        }
    }

    public string? Title { get; set; }

    public int RegisterStep(ModalStep step)
    {
        steps.Add(step);

        if (steps.Count == 1)
        {
            Title = step.Title;
            StateHasChanged();
        }

        return steps.Count - 1;
    }

    public void NextStep()
    {
        if (CurrentStep < steps.Count - 1)
            CurrentStep++;
    }

    public void PrevStep()
    {
        if (CurrentStep > 0)
            CurrentStep--;
    }

    private async Task Finish()
    {
        await OnFinish.InvokeAsync();
    }
}

<div class="modal fade" id="@Id" tabindex="-1" aria-labelledby="modalTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content @(DarkMode ? "bg-dark text-white" : "")">
            <!-- Dark Mode Applied -->
            <div class="modal-header @(DarkMode ? "bg-dark border-secondary" : "")">
                <h2 class="modal-title fs-3">@Title</h2>
                <button type="button" class="btn-close @(DarkMode ? "btn-close-white" : "")" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body @(DarkMode ? "bg-dark border-secondary" : "")">
                <CascadingValue Value="this">
                    @ChildContent
                </CascadingValue>
            </div>
            <div class="modal-footer justify-content-center @(DarkMode ? "bg-dark border-secondary" : "")">
                @if (CurrentStep == 0)
                {
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                }
                else
                {
                    <button type="button" class="btn btn-secondary" @onclick="PrevStep">Back</button>
                }

                @if (CurrentStep == steps.Count - 1)
                {
                    <button type="button" class="btn btn-primary" @onclick="Finish" data-bs-dismiss="modal">Finish</button>
                }
                else
                {
                    <button type="button" class="btn btn-primary" @onclick="NextStep">Next</button>
                }
            </div>
        </div>
    </div>
</div>
